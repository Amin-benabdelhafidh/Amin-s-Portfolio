{"ast":null,"code":"import { useGuestStore } from '@/stores';\nimport axios from 'axios';\nimport { mapActions, mapState } from 'pinia';\nexport default {\n  name: \"Account\",\n  data() {\n    return {\n      guest: {\n        name: '',\n        id: 0,\n        email: \"\"\n      }\n    };\n  },\n  computed: {\n    ...mapState(useGuestStore, ['get_Guest', 'token'])\n  },\n  mounted() {\n    this.guest = this.get_Guest;\n  },\n  methods: {\n    ...mapActions(useGuestStore, ['loading', 'removeToken', 'removeUser']),\n    async logout() {\n      this.loading(true);\n\n      // send requeset to destroy \n      await axios.post('/api/v1/token/logout/').then(response => {\n        // remove token from store and from localstorage\n        this.removeToken();\n        // remove user informations from store and from local storage\n        this.removeUser();\n      }).catch(error => {\n        alert('Something went wrong!');\n      });\n      this.loading(false);\n    }\n  }\n};","map":{"version":3,"names":["useGuestStore","axios","mapActions","mapState","name","data","guest","id","email","computed","mounted","get_Guest","methods","logout","loading","post","then","response","removeToken","removeUser","catch","error","alert"],"sources":["C:\\Users\\SBS\\Desktop\\amin.projects\\My-Portfolio\\portfolio\\src\\views\\Account.vue"],"sourcesContent":["<template>\r\n    <div class=\"account\">\r\n        <h3>{{ guest.username }}</h3>\r\n        <p>{{ guest.id }}</p>\r\n        <h6>{{ guest.email }}</h6>\r\n        <button @click=\"logout\">logout</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { useGuestStore } from '@/stores';\r\nimport axios from 'axios';\r\nimport { mapActions, mapState } from 'pinia';\r\n\r\n    export default {\r\n        name: \"Account\",\r\n        data(){\r\n            return {\r\n                guest: {\r\n                    name: '',\r\n                    id: 0,\r\n                    email: \"\"\r\n                },\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState(useGuestStore, ['get_Guest', 'token'])\r\n        },\r\n        mounted(){\r\n            this.guest = this.get_Guest\r\n        },\r\n        methods: {\r\n            ...mapActions(useGuestStore, ['loading', 'removeToken', 'removeUser']),\r\n            async logout(){\r\n                this.loading(true)\r\n\r\n                // send requeset to destroy \r\n                await axios\r\n                    .post('/api/v1/token/logout/')\r\n                    .then(response=>{\r\n                        // remove token from store and from localstorage\r\n                        this.removeToken()\r\n                        // remove user informations from store and from local storage\r\n                        this.removeUser()\r\n\r\n                    })\r\n                    .catch(error=>{\r\n                        alert('Something went wrong!')\r\n                    })\r\n\r\n                this.loading(false)\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":"AAUA,SAASA,aAAY,QAAS,UAAU;AACxC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,UAAU,EAAEC,QAAO,QAAS,OAAO;AAExC,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,KAAK,EAAE;QACHF,IAAI,EAAE,EAAE;QACRG,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGN,QAAQ,CAACH,aAAa,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC;EACrD,CAAC;EACDU,OAAOA,CAAA,EAAE;IACL,IAAI,CAACJ,KAAI,GAAI,IAAI,CAACK,SAAQ;EAC9B,CAAC;EACDC,OAAO,EAAE;IACL,GAAGV,UAAU,CAACF,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IACtE,MAAMa,MAAMA,CAAA,EAAE;MACV,IAAI,CAACC,OAAO,CAAC,IAAI;;MAEjB;MACA,MAAMb,KAAI,CACLc,IAAI,CAAC,uBAAuB,EAC5BC,IAAI,CAACC,QAAQ,IAAE;QACZ;QACA,IAAI,CAACC,WAAW,EAAC;QACjB;QACA,IAAI,CAACC,UAAU,EAAC;MAEpB,CAAC,EACAC,KAAK,CAACC,KAAK,IAAE;QACVC,KAAK,CAAC,uBAAuB;MACjC,CAAC;MAEL,IAAI,CAACR,OAAO,CAAC,KAAK;IACtB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}