{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"guestname\"\n}, \"Guestname\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"guestname\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  id: \"submit\",\n  value: \"Sign-Up\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitform && $options.submitform(...args), [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"guestname\",\n    placeholder: \"Your name...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"guestname\",\n    placeholder: \"Your password...\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_4], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","id","value","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","submitform","_hoisted_2","placeholder","$data","name","$event","_hoisted_3","password","_hoisted_4"],"sources":["C:\\Users\\SBS\\Desktop\\amin.projects\\My-Portfolio\\portfolio\\src\\views\\LogIn.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n        <form @submit.prevent=\"submitform\">\r\n            <label for=\"guestname\">Guestname</label>\r\n            <input type=\"text\" id=\"guestname\" placeholder=\"Your name...\" v-model=\"name\">\r\n            <label for=\"guestname\">Password</label>\r\n            <input type=\"password\" id=\"guestname\" placeholder=\"Your password...\" v-model=\"password\">\r\n            <input type=\"submit\" id=\"submit\" value=\"Sign-Up\">\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'pinia';\r\nimport { useGuestStore } from '@/stores';\r\nimport axios from 'axios';\r\n\r\n    export default {\r\n        name: 'LogIn',\r\n        computed: {\r\n            ...mapState(useGuestStore, ['guest', 'isAuth', 'token'])\r\n        },\r\n        data(){\r\n            return{\r\n                name: '',\r\n                password: ''\r\n            }\r\n        },\r\n        mounted(){\r\n\r\n            if(this.isAuth){\r\n                this.$router.push('/account')\r\n            }\r\n\r\n            document.title = \"Log-In | Amin's portfolio\";\r\n            \r\n            \r\n        },\r\n        methods: {\r\n            // get actions from store\r\n            ...mapActions(useGuestStore, ['setToken', 'removeToken', 'loading', 'setUser']),\r\n            async getuserinfo(){\r\n                await axios\r\n                    .get('/api/v1/users/me/')\r\n                    .then(response=>{\r\n                        this.setUser(response.data)\r\n                    })\r\n            },\r\n\r\n            // submit form and login user\r\n            async submitform(){\r\n                this.loading(true);\r\n\r\n                axios.defaults.headers.common['Authorization'] = \"\" \r\n                this.removeToken()\r\n\r\n                if(this.name !== '' && this.password !== \"\"){\r\n                    const formData= {\r\n                        username: this.name,\r\n                        password: this.password\r\n                    }\r\n                    await axios\r\n                        .post('/api/v1/token/login/', formData)\r\n                        .then(response=>{\r\n                            console.log(response)\r\n                            const token = response.data.auth_token;\r\n\r\n                            this.setToken(token)\r\n\r\n                            axios.defaults.headers.common['Authorization'] = \"Token \" + token\r\n                            this.getuserinfo()\r\n                            this.$router.push('/')\r\n                        })\r\n                        .catch(error=>{\r\n                            alert('something went wrong!')\r\n                        })\r\n\r\n                } else {\r\n                    if(this.name !== ''){\r\n                        alert('guestname field is empty!')\r\n                    } else{\r\n                        alert()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAO;gCAEVC,mBAAA,CAAwC;EAAjCC,GAAG,EAAC;AAAW,GAAC,WAAS;gCAEhCD,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAW,GAAC,UAAQ;gCAE/BD,mBAAA,CAAiD;EAA1CE,IAAI,EAAC,QAAQ;EAACC,EAAE,EAAC,QAAQ;EAACC,KAAK,EAAC;;;;uBAN/CC,mBAAA,CAQM,OARNC,UAQM,GAPFN,mBAAA,CAMO;IANAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC7BG,UAAwC,E,gBACxCb,mBAAA,CAA4E;IAArEE,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,WAAW;IAACW,WAAW,EAAC,cAAc;+DAAUC,KAAA,CAAAC,IAAI,GAAAC,MAAA;iDAAJF,KAAA,CAAAC,IAAI,E,GAC1EE,UAAuC,E,gBACvClB,mBAAA,CAAwF;IAAjFE,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,WAAW;IAACW,WAAW,EAAC,kBAAkB;+DAAUC,KAAA,CAAAI,QAAQ,GAAAF,MAAA;iDAARF,KAAA,CAAAI,QAAQ,E,GACtFC,UAAiD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}