{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_ProjectBox = _resolveComponent(\"ProjectBox\");\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.projects, project => {\n    return _openBlock(), _createBlock(_component_ProjectBox, {\n      project: project,\n      key: project.id\n    }, null, 8 /* PROPS */, [\"project\"]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","_ctx","projects","project","_createBlock","_component_ProjectBox","key","id"],"sources":["C:\\Users\\SBS\\Desktop\\amin.projects\\My-Portfolio\\portfolio\\src\\views\\Projects.vue"],"sourcesContent":["<template>\r\n  <ProjectBox \r\n      v-for=\"project in projects\"\r\n      :project=\"project\"\r\n      :key=\"project.id\"/>\r\n</template>\r\n\r\n<script>\r\n  import \r\n\r\n  export default{\r\n    name: 'Projects',\r\n    data(){\r\n      return{\r\n        projects: [],\r\n      }\r\n    },\r\n    components:{\r\n      ProjectBox,\r\n    },\r\n    \r\n    mounted(){\r\n      this.fetch_data()\r\n    },\r\n    methods:{\r\n      ...mapActions(useGuestStore, [\"loading\"]),\r\n      async fetch_data(){\r\n\r\n        this.loading(true)\r\n\r\n        await axios\r\n          .get('/api/v1/all_projects')\r\n          .then(response => {\r\n            console.log(response.data)\r\n            this.projects = response.data\r\n          })\r\n          .catch(error=>{\r\n            console.log(JSON.stringify(error))\r\n          })\r\n\r\n        this.loading(false)\r\n        \r\n      }\r\n    }\r\n  }\r\n</script>"],"mappings":";;;2BACEA,mBAAA,CAGuBC,SAAA,QAAAC,WAAA,CAFDC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADlBC,YAAA,CAGuBC,qBAAA;MADlBF,OAAO,EAAEA,OAAO;MAChBG,GAAG,EAAEH,OAAO,CAACI"},"metadata":{},"sourceType":"module","externalDependencies":[]}