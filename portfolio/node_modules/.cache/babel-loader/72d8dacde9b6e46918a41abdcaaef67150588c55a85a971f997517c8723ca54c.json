{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapState } from 'pinia';\nimport { useGuestStore } from '@/stores';\nimport axios from 'axios';\nexport default {\n  name: 'LogIn',\n  computed: {\n    ...mapState(useGuestStore, ['guest', 'isAuth', 'token'])\n  },\n  data() {\n    return {\n      name: '',\n      password: ''\n    };\n  },\n  mounted() {\n    if (this.isAuth) {\n      this.$route.push('/account');\n    }\n    document.title = \"Log-In | Amin's portfolio\";\n  },\n  methods: {\n    // get actions from store\n    ...mapActions(useGuestStore, ['setToken', 'removeToken', 'loading']),\n    // submit form and login user\n    async submitform() {\n      this.loading(true);\n      axios.defaults.headers.common['Authorization'] = \"\";\n      this.removeToken();\n      if (this.name !== '' && this.password !== \"\") {\n        const formData = {\n          username: this.name,\n          password: this.password\n        };\n        await axios.post('/api/v1/token/login/', formData).then(response => {\n          const token = response.data.auth_token;\n          this.setToken(token);\n          axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n          this.$route.push('');\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapState","useGuestStore","axios","name","computed","data","password","mounted","isAuth","$route","push","document","title","methods","submitform","loading","defaults","headers","common","removeToken","formData","username","post","then","response","token","auth_token","setToken"],"sources":["C:\\Users\\SBS\\Desktop\\amin.projects\\My-Portfolio\\portfolio\\src\\views\\LogIn.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n        <form @submit.prevent=\"submitform\">\r\n            <label for=\"guestname\">Guestname</label>\r\n            <input type=\"text\" id=\"guestname\" placeholder=\"Your name...\" v-model=\"name\">\r\n            <label for=\"guestname\">Password</label>\r\n            <input type=\"password\" id=\"guestname\" placeholder=\"Your password...\" v-model=\"password\">\r\n            <input type=\"submit\" id=\"submit\" value=\"Sign-Up\">\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'pinia';\r\nimport { useGuestStore } from '@/stores';\r\nimport axios from 'axios';\r\n\r\n    export default {\r\n        name: 'LogIn',\r\n        computed: {\r\n            ...mapState(useGuestStore, ['guest', 'isAuth', 'token'])\r\n        },\r\n        data(){\r\n            return{\r\n                name: '',\r\n                password: ''\r\n            }\r\n        },\r\n        mounted(){\r\n            if(this.isAuth){\r\n                this.$route.push('/account')\r\n            }\r\n\r\n            document.title = \"Log-In | Amin's portfolio\";\r\n            \r\n            \r\n        },\r\n        methods: {\r\n            // get actions from store\r\n            ...mapActions(useGuestStore, ['setToken', 'removeToken', 'loading']),\r\n\r\n            // submit form and login user\r\n            async submitform(){\r\n                this.loading(true);\r\n\r\n                axios.defaults.headers.common['Authorization'] = \"\" \r\n                this.removeToken()\r\n\r\n                if(this.name !== '' && this.password !== \"\"){\r\n                    const formData= {\r\n                        username: this.name,\r\n                        password: this.password\r\n                    }\r\n                    await axios\r\n                        .post('/api/v1/token/login/', formData)\r\n                        .then(response=>{\r\n                            const token = response.data.auth_token;\r\n\r\n                            this.setToken(token)\r\n\r\n                            axios.defaults.headers.common['Authorization'] = \"Token \" + token\r\n                            this.$route.push('')\r\n                        })\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":";AAaA,SAASA,UAAU,EAAEC,QAAO,QAAS,OAAO;AAC5C,SAASC,aAAY,QAAS,UAAU;AACxC,OAAOC,KAAI,MAAO,OAAO;AAErB,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE;IACN,GAAGJ,QAAQ,CAACC,aAAa,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;EAC3D,CAAC;EACDI,IAAIA,CAAA,EAAE;IACF,OAAM;MACFF,IAAI,EAAE,EAAE;MACRG,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAG,IAAI,CAACC,MAAM,EAAC;MACX,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,UAAU;IAC/B;IAEAC,QAAQ,CAACC,KAAI,GAAI,2BAA2B;EAGhD,CAAC;EACDC,OAAO,EAAE;IACL;IACA,GAAGd,UAAU,CAACE,aAAa,EAAE,CAAC,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;IAEpE;IACA,MAAMa,UAAUA,CAAA,EAAE;MACd,IAAI,CAACC,OAAO,CAAC,IAAI,CAAC;MAElBb,KAAK,CAACc,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,EAAC;MAClD,IAAI,CAACC,WAAW,EAAC;MAEjB,IAAG,IAAI,CAAChB,IAAG,KAAM,EAAC,IAAK,IAAI,CAACG,QAAO,KAAM,EAAE,EAAC;QACxC,MAAMc,QAAQ,GAAE;UACZC,QAAQ,EAAE,IAAI,CAAClB,IAAI;UACnBG,QAAQ,EAAE,IAAI,CAACA;QACnB;QACA,MAAMJ,KAAI,CACLoB,IAAI,CAAC,sBAAsB,EAAEF,QAAQ,EACrCG,IAAI,CAACC,QAAQ,IAAE;UACZ,MAAMC,KAAI,GAAID,QAAQ,CAACnB,IAAI,CAACqB,UAAU;UAEtC,IAAI,CAACC,QAAQ,CAACF,KAAK;UAEnBvB,KAAK,CAACc,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,QAAO,GAAIO,KAAI;UAChE,IAAI,CAAChB,MAAM,CAACC,IAAI,CAAC,EAAE;QACvB,CAAC;MAET;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}