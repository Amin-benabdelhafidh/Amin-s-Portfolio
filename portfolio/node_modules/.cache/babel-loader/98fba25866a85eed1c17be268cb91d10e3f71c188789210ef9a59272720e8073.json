{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useGuestStore } from '@/stores';\nimport axios from 'axios';\nimport { mapActions, mapState } from 'pinia';\nexport default {\n  name: 'SignUp',\n  data() {\n    return {\n      name: '',\n      password: \"\",\n      confirm_password: \"\",\n      email: ''\n    };\n  },\n  computed: {\n    ...mapState(useGuestStore, ['isAuth'])\n  },\n  beforeMount() {\n    // if the user is already logged-in redirect him/her to the account view \n    if (this.isAuth) {\n      this.$router.push('/account');\n    }\n  },\n  methods: {\n    ...mapActions(useGuestStore, ['loading']),\n    // submit the form and sign the user up\n    async submitform() {\n      this.loading(true);\n      // check if the password match the confirmation\n      if (this.password === this.confirm_password) {\n        const formData = {\n          username: this.name,\n          password: this.password,\n          email: this.email\n        };\n        // send post request to sign the user up\n        await axios.post('api/v1/users/', formData).then(response => {\n          // after successfully signed-up redirect user to login view\n          this.$router.push('/log-in');\n        }).catch(error => {\n          alert(\"An error happened \\n your password is too common!\");\n        });\n      } else {\n        alert('Password and Its Confirmation does not match!');\n      }\n      this.loading(false);\n    }\n  }\n};","map":{"version":3,"names":["useGuestStore","axios","mapActions","mapState","name","data","password","confirm_password","email","computed","beforeMount","isAuth","$router","push","methods","submitform","loading","formData","username","post","then","response","catch","error","alert"],"sources":["C:\\Users\\SBS\\Desktop\\amin.projects\\My-Portfolio\\portfolio\\src\\views\\SignUp.vue"],"sourcesContent":["<template>\r\n    <div class=\"signup\">\r\n        <form @submit.prevent=\"submitform\">\r\n            <label for=\"guestname\">Guestname</label>\r\n            <input type=\"text\" id=\"guestname\" placeholder=\"Your name...\" v-model=\"name\">\r\n            <label for=\"guestname\">Password</label>\r\n            <input type=\"password\" id=\"guestname\" placeholder=\"Your password...\" v-model=\"password\">\r\n            <label for=\"guestname\">Confirm Password</label>\r\n            <input type=\"password\" id=\"guestname\" placeholder=\"Confirm your password...\" v-model=\"confirm_password\">\r\n            <label for=\"guestname\">E-mail(optional):</label>\r\n            <input type=\"email\" id=\"guestname\" placeholder=\"Your e-mail...\" v-model=\"email\">\r\n            <input type=\"submit\" id=\"submit\" value=\"Sign-Up\">\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { useGuestStore } from '@/stores';\r\nimport axios from 'axios';\r\nimport { mapActions, mapState } from 'pinia';\r\n\r\n    export default{\r\n        name: 'SignUp',\r\n        data(){\r\n            return{\r\n                name: '',\r\n                password: \"\",\r\n                confirm_password: \"\",\r\n                email: '',\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState(useGuestStore, ['isAuth'])\r\n        },\r\n        beforeMount() {\r\n            // if the user is already logged-in redirect him/her to the account view \r\n            if(this.isAuth){\r\n                this.$router.push('/account')\r\n            }\r\n        },\r\n        methods: {\r\n            ...mapActions(useGuestStore, ['loading']),\r\n            // submit the form and sign the user up\r\n            async submitform(){\r\n                this.loading(true)\r\n                // check if the password match the confirmation\r\n                if (this.password === this.confirm_password){\r\n                    const formData = {\r\n                        username: this.name,\r\n                        password: this.password,\r\n                        email: this.email,\r\n                    }\r\n                    // send post request to sign the user up\r\n                    await axios\r\n                        .post('api/v1/users/', formData)\r\n                        .then(response=>{\r\n                            // after successfully signed-up redirect user to login view\r\n                            this.$router.push('/log-in')\r\n                        })\r\n                        .catch(error=>{\r\n                            alert(\"An error happened \\n your password is too common!\")\r\n                            \r\n                        })\r\n                } else{\r\n                    alert('Password and Its Confirmation does not match!');\r\n                }\r\n\r\n                this.loading(false)\r\n                \r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    \r\n</style>"],"mappings":";AAiBA,SAASA,aAAY,QAAS,UAAU;AACxC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,UAAU,EAAEC,QAAO,QAAS,OAAO;AAExC,eAAc;EACVC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFD,IAAI,EAAE,EAAE;MACRE,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MACpBC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGN,QAAQ,CAACH,aAAa,EAAE,CAAC,QAAQ,CAAC;EACzC,CAAC;EACDU,WAAWA,CAAA,EAAG;IACV;IACA,IAAG,IAAI,CAACC,MAAM,EAAC;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU;IAChC;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,GAAGZ,UAAU,CAACF,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC;IACzC;IACA,MAAMe,UAAUA,CAAA,EAAE;MACd,IAAI,CAACC,OAAO,CAAC,IAAI;MACjB;MACA,IAAI,IAAI,CAACV,QAAO,KAAM,IAAI,CAACC,gBAAgB,EAAC;QACxC,MAAMU,QAAO,GAAI;UACbC,QAAQ,EAAE,IAAI,CAACd,IAAI;UACnBE,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBE,KAAK,EAAE,IAAI,CAACA;QAChB;QACA;QACA,MAAMP,KAAI,CACLkB,IAAI,CAAC,eAAe,EAAEF,QAAQ,EAC9BG,IAAI,CAACC,QAAQ,IAAE;UACZ;UACA,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,SAAS;QAC/B,CAAC,EACAS,KAAK,CAACC,KAAK,IAAE;UACVC,KAAK,CAAC,mDAAmD;QAE7D,CAAC;MACT,OAAM;QACFA,KAAK,CAAC,+CAA+C,CAAC;MAC1D;MAEA,IAAI,CAACR,OAAO,CAAC,KAAK;IAEtB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}